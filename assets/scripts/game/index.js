const SIZES34 = [
    [228, 223, 0, 96, 94, 0], [330, 270, 0, 89, 84, 96], [235, 276, 0, 0, 102, 89],
    [277, 331, 94, 89, 86, 0], [237, 286, 84, 94, 94, 89], [278, 290, 102, 0, 88, 94],
    [266, 280, 86, 94, 82, 0], [301, 290, 94, 86, 96, 94], [223, 282, 88, 0, 80, 86],
    [227, 234, 82, 97, 0, 0], [328, 230, 96, 85, 0, 97], [236, 227, 80, 0, 0, 85],
];

const SIZES46 = [
    [198, 180, 0, 48, 46, 0], [177, 148, 0, 48, 44, 48], [238, 178, 0, 48, 44, 48], [174, 148, 0, 0, 48, 45],
    [191, 164, 46, 46, 47, 0], [184, 185, 44, 54, 48, 46], [245, 187, 44, 50, 42, 54], [174, 222, 45, 0, 52, 50],
    [172, 215, 47, 55, 46, 0], [248, 219, 48, 50, 43, 55], [175, 190, 42, 53, 48, 50], [206, 192, 52, 0, 45, 53],
    [170, 183, 46, 51, 42, 0], [238, 185, 43, 53, 42, 51], [223, 192, 48, 49, 48, 53], [165, 187, 45, 0, 40, 49],
    [170, 183, 42, 51, 41, 0], [238, 183, 42, 53, 42, 51], [223, 189, 48, 49, 48, 53], [165, 181, 40, 0, 40, 49],
    [167, 154, 41, 53, 0, 0], [214, 154, 42, 54, 0, 53], [243, 152, 48, 48, 0, 54], [174, 149, 40, 0, 0, 48],
];

const SIZES68 = [
    [111, 116, 0, 34, 32, 0], [141, 135, 0, 30, 34, 34], [139, 110, 0, 33, 33, 30], [144, 137, 0, 39, 36, 33], [166, 116, 0, 34, 33, 39], [111, 116, 0, 0, 32, 34],
    [134, 159, 32, 33, 33, 0], [120, 146, 34, 36, 37, 33], [143, 149, 33, 36, 35, 36], [141, 117, 36, 32, 33, 36], [141, 163, 33, 33, 36, 32], [133, 159, 32, 0, 33, 33],
    [111, 118, 33, 33, 32, 0], [144, 142, 37, 31, 35, 33], [139, 159, 35, 32, 34, 31], [164, 166, 33, 36, 37, 32], [139, 122, 36, 33, 31, 36], [111, 118, 33, 0, 32, 33],
    [135, 160, 32, 34, 32, 0], [121, 142, 35, 31, 35, 34], [137, 117, 34, 34, 33, 31], [161, 118, 37, 35, 33, 34], [124, 158, 31, 34, 35, 35], [135, 160, 32, 0, 32, 34],
    [111, 120, 32, 34, 32, 0], [141, 140, 35, 30, 34, 34], [139, 139, 33, 33, 33, 30], [144, 167, 33, 39, 36, 33], [167, 120, 35, 34, 33, 39], [111, 120, 32, 0, 32, 34],
    [133, 159, 32, 33, 33, 0], [120, 146, 34, 36, 37, 33], [144, 150, 33, 36, 35, 36], [142, 117, 36, 31, 33, 36], [140, 163, 33, 33, 36, 31], [133, 159, 32, 0, 33, 33],
    [111, 118, 33, 33, 32, 0], [144, 142, 37, 31, 35, 33], [139, 159, 35, 32, 34, 31], [164, 165, 33, 36, 36, 32], [139, 122, 36, 33, 30, 36], [111, 118, 33, 0, 32, 33],
    [135, 132, 32, 34, 0, 0], [121, 111, 35, 31, 0, 34], [137, 113, 34, 34, 0, 31], [161, 114, 36, 35, 0, 34], [123, 127, 30, 34, 0, 35], [135, 132, 32, 0, 0, 34]
];

let types = [[3, 4], [4, 6], [6, 8]];

const cal_center = (arr) => {
    let res = arr.map((item, index) => {
        let coordChange_start_x = item[0] - 322;
        let coordChange_start_y = 428.5 - item[1];

        let coordChange_center_x = coordChange_start_x + item[2] / 2;
        let coordChange_center_y = coordChange_start_y - item[3] / 2;

        return [...item, coordChange_center_x, coordChange_center_y];
    });
    return res;
}

const cal = (arr, type) => {
    let res = arr.map((item, index) => {
        let index_x = index % type[0];
        let index_y = Math.floor(index / type[0]);

        let start_x = 0;
        let dx_whole = 0;
        let dx_more = 0;

        let dx_start_index = index_y * type[0];
        for (let i = dx_start_index; i < index; i++) {
            dx_whole = arr[i][0] + dx_whole;
            dx_more = arr[i][3] + dx_more;
        }
        start_x = dx_whole - dx_more;

        let start_y = 0;
        let dy_whole = 0;
        let dy_more = 0;
        for (let j = 0; j < index_y; j++) {
            let regIndex = j * type[0] + index_x;
            dy_whole = arr[regIndex][1] + dy_whole;
            dy_more = arr[regIndex][4] + dy_more;
        }
        start_y = dy_whole - dy_more;
        let index_w = item[0];
        let index_h = item[1];
        return [start_x, start_y, index_w, index_h, index];
    });
    let result = cal_center(res);
    console.log(result)
}

cal(SIZES34, types[0]);